package toast.client;

import net.fabricmc.api.EnvType;
import net.fabricmc.api.Environment;
import net.fabricmc.api.ModInitializer;
import net.minecraft.util.Formatting;
import toast.client.auth.gui.NoAuthPopup;
import toast.client.commands.CommandHandler;
import toast.client.gui.clickgui.ClickGuiScreen;
import toast.client.modules.ModuleManager;
import toast.client.utils.FileManager;
import toast.client.utils.LoginUtil;
import toast.client.utils.TPSCalculator;

import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.security.NoSuchAlgorithmException;
import java.util.Collections;
import java.util.List;
import java.util.Objects;

import static toast.client.utils.HashUtil.*;

@Environment(EnvType.CLIENT)
public class ToastClient implements ModInitializer {
    public static String version = "b1.0";
    public static String cleanPrefix = "ToastClient";
    public static String chatPrefix = Formatting.DARK_GRAY+"["+Formatting.LIGHT_PURPLE+"ToastClient"+Formatting.DARK_GRAY+"]";
    public static String cmdPrefix = ".";
    public static List<String> devs = Collections.singletonList("MorganAnkan, RemainingToast, Qther, Fleebs, wnuke");
    public static ClickGuiScreen clickGui;

    public static Boolean devMode = true;

    static {
        System.setProperty("java.awt.headless", "false");
    }

    @Override
    public void onInitialize() {
//        NoAuthPopup.createWindow();
//        try
//        {
////            File file = FileManager.getFile()
//            Path path = Paths.get("/Users/emceewheeze/Documents/ToastClient/src/main/java/toast/client/auth/");
////            System.out.println("HashCode Generated by SHA-256 for:");
//            String s1 = "69";
//            if((FileManager.readFile(path.toFile())).contains(toHexString(getSHA(s1)))) {
//                System.out.println("\n" + s1 + " : " + toHexString(getSHA(s1)));
//            } else { System.out.println("Phat Fail"); }
//        }
//        // For specifying wrong message digest algorithms
//        catch (NoSuchAlgorithmException e) {
//            System.out.println("Exception thrown for incorrect algorithm: " + e);
//        }
//        System.out.print(org.apache.commons.codec.digest.DigestUtils.sha256Hex("69"));
//        String sha256hex = org.apache.commons.codec.digest.DigestUtils.sha256Hex("69");
        System.out.println(cleanPrefix+" Initialized");
        System.out.println("Special thanks to all contributors of this project "+devs);
        FileManager.initFileManager();
        ModuleManager.initModules();
        CommandHandler.initCommands();
        TPSCalculator.calculatorInstance = new TPSCalculator();
        if(devMode) {
            boolean login = LoginUtil.loginCracked("RemainingToast"); // avoid generating lots of .dat files in singleplayer worlds
            if (login) {
                System.out.println("Logged in as Developer");
            } else {
                System.out.println("Failed login ;C");
            }
        }
    }
}
